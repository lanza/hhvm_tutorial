name: Continuous Integration
on:
  push:
  pull_request:
  schedule:
    - cron: '42 15 * * *'
jobs:
  build:
    name: HHVM ${{matrix.hhvm}} - ${{matrix.os}}
    strategy:
      # Run tests on all OS's and HHVM versions, even if one fails
      fail-fast: false
      matrix:
        os: [ ubuntu, macos ]
        hhvm:
          - '4.60'
          - latest
          - nightly
    runs-on: ${{matrix.os}}-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Composer
        run: .github/workflows/install-composer.sh --install-dir=${{runner.temp}}
      - name: Install HHVM (apt)
        if: matrix.os == 'ubuntu'
        run: |
          set -ex
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y software-properties-common apt-transport-https
          sudo apt-key add .github/workflows/hhvm.gpg.key
          if [ "${{matrix.hhvm}}" = "nightly" ]; then
            sudo add-apt-repository https://dl.hhvm.com/ubuntu
            sudo apt-get install -y hhvm-nightly
          elif [ "${{matrix.hhvm}}" = "latest" ]; then
            sudo add-apt-repository https://dl.hhvm.com/ubuntu
            sudo apt-get install -y hhvm
          else
            DISTRO=$(lsb_release --codename --short)
            sudo add-apt-repository \
              "deb https://dl.hhvm.com/ubuntu ${DISTRO}-${{matrix.hhvm}} main"
            sudo apt-get install -y hhvm
          fi
      - name: Install HHVM (brew)
        if: matrix.os == 'macos'
        run: |
          brew tap hhvm/hhvm
          if [ "${{matrix.hhvm}}" = "latest" ]; then
            brew install hhvm
          else
            brew install hhvm-${{matrix.hhvm}}
          fi
      - name: Inspect HHVM and Hack versions
        run: |
          hhvm --version
          hh_client --version
      - name: Create branch for version alias
        run: git checkout -b CI_current_pull_request
      - name: Install project dependencies
        run: php ${{runner.temp}}/composer.phar install
      - name: Typecheck
        run: hh_client
      - name: Run tests
        run: bin/hacktest tests/clean/
      - name: Run lint
        if: matrix.hhvm != 'nightly'
        run: vendor/bin/hhast-lint
      - id: create-repo-dir
        name: Create repository directory
        run: echo "::set-output name=path::$(mktemp -d)"
      - name: Run HHBC
        run: |
          # Exclude vendor/bin/ to work around issue in HHVM 4.62
          # https://github.com/facebook/hhvm/issues/8719
          hhvm --hphp --target hhbc -l 3 \
            --module bin \
            --module src \
            --module tests \
            --module vendor \
            --ffile bin/hacktest \
            --exclude-dir vendor/bin \
            --output-dir ${{ steps.create-repo-dir.outputs.path }}
      - name: Run tests in repo-authoritative mode
        working-directory: ${{ steps.create-repo-dir.outputs.path }}
        run: |
          hhvm --no-config \
            -d hhvm.repo.authoritative=true \
            -d hhvm.repo.central.path=$(pwd)/hhvm.hhbc \
            bin/hacktest tests/clean/
